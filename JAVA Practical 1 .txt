****************************************************JAVA PRACTICALS**************************************

1.1) Write a java program to accept names of “n” cities , insert same into arraylist
collection and display the contents of same arraylist, also remove all these elements.'


import java.util.*;
import java.io.*;
public class ArrayListDemo
{
public static void main(String args[])throws Exception
{
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
ArrayList al=new ArrayList();
System.out.println(“\nHow many City?”);
Int n =Integer.parseInt(br.readLine());
System.out.println(“\n Enter City names:”);
for(int i=;i<=n;i++)
{
al.add(br.readLine());
}
System.out.println(“Entered cities are :”+al);
al.removeAll(al);
System.out.println(“All cities are removed from the ArrayList:”+a);
}
} 

*********************************************************************************************************

2)Write a java program to read ‘n’ names of your friends , store it into linked list , also
display contents of the same.
import java.util.*;
import java.io.*;
public class LinkedListDemo
{
Public static void main(String args[])throws Exception
{
int n;
BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
LinkedList li=new LinkedList();
System.out.println(“\Enter number of your friends:”);
n=Interger.parseInt(br.readLine()));
System.out.println(“\Enter your friends names:”);
for(int i=1;i<=n;i++)
{
li.add(br.readLine());
}
System.out.println(“\Linked List content is:”);
}
}

***************************************************************************************************

3) Write a program to create a new tree set , add some colors(String)and print out the
tree set.
import java.util.*;
class TreeSetDemo
{
Public static void main(String args[])
{
TreeSet ts=new TreeSet();
ts.add(“Red”);
ts.add(“Yellow”);
ts.add(“Blue”);
ts.add(“Black”);
ts.add(“Orange”);
ts.add(“Green”);
System.out.println(“TreeSet is:”+ts);
}
}

***********************************************************************************************************

4) Create the hastable that will maintain the mobile number and student name. Display
the contact list .
import java.util.*;
import java.io.*;
class HashTableDemo
{
Public static void main(String args[])
{
Hashtable ht= new Hashtable();
Enumeration names;
String str;
ht.put(“Amar”,new Long(2222222222L));
ht.put(“Anil”,new Long(3333333333L));
ht.put(“Soham”,new Long(8888888888L));
ht.put(“Kiran”,new Long(9999999999L));
ht.put(“Williams”,new Long(4444444444L));
names=ht.keys();
while(names.hasMoreElements());
{
str= (String) names.nextElement();
System.out.println(str+”:”+ht.get(str));
}}}

*************************************************************************************************************

import java.util.*;
import java.io.*;

class SETB1
{
            public static void main(String[] args) throws Exception
            {
                        int no,element,i;
                                    BufferedReader br=new BufferedReader(new InputStreamReader(System.in));
                                    TreeSet ts=new TreeSet();
                                    System.out.println("Enter the of elements :");
                                    no=Integer.parseInt(br.readLine());
                                    for(i=0;i<no;i++)
                                    {
                                                System.out.println("Enter the element : ");
                                                            element=Integer.parseInt(br.readLine());
                                                            ts.add(element);
                                    }
                       
                                    System.out.println("The elements in sorted order :"+ts);       
                        System.out.println("Enter element to be serach : ");
                        element = Integer.parseInt(br.readLine());
                        if(ts.contains(element))
                                    System.out.println("Element is found");
                        else
                                    System.out.println("Element is NOT found");
            }
}


*******************************************************************************************************

2) Write a program to sort HashMap by keys and display the details before sorting
and after sorting.
import java.util.*;
class HashMapDemo
{
Public static void main(String args[])
{
HashMap <Interger,String> ha=new HashMap<Interger,String>();
ha.put(10,”Java”);
ha.put(20,”Operating System”);
ha.put(30,”SoftwareTesting Tools”);
ha.put(40,”Complier Constructor”);
ha.put(50,”Web Technologies”);
System.out.println( “Before Sorting:”);
Set set=ha.entrySet();
Iterator it=set.iterator();
While(it.hasNext())
{
Map.Entry me=(Map.Entry)it.next();
System.out.print(me.getKeys()+”:”);

System.out.println(me.getValues());
}
Map<Integer,String> map=new HashMap<Integer,String>(hm);
System.out.println(“After Sorting:”);
Set set1=map.entrySet();
Iterator it2=set2.it();
While(it2.hasNext())
{
Map.Entry me2=(Map.Entry)it2.next();
System.out.print(me2.getKeys()+”:”);
System.out.prinln(me2.getValues());
}
}
}

*****************************************************************************************************


Set-B-3)
import java.util.*;
import java.io.*;
public class Phonebook
{
Public static void main(String args[])
{
Try
{
FileInputStream fis=new FileInputStream(“home/desktop/myfile.txt”);
Scanner(fis).useDelimiter(“\t”);
Hashtable<String,String> ht=new Hashtable<String,String>();
String [] strarray;
String a,str;
While(sc.hasNext())
{
a=sc.nextLine();
strarray=a.split(\t”);
ht.put(strarray[0],strarray[1]);

System.out.println(“Hashtable values are:”+strarray[0]+”:”+strarray[1]);
Scanner s=new Scanner(System.in);
System.out.println(“Enter the name as given in the phone book”);
Str=s.next();
If(ht.containsKey(str))
{
System.out.println(“Phone no is:”+ht,get(str));
}
else
{
System.out.println(“Name is not Matching with the phone book”);
}
}
Catch(Exception e)
{
System.out.println(e);
}
}
}